// ===================================
// Media Queries (@include breakpoint(medium) { })
// ===================================

@mixin breakpoint($point) {
	@if $point == large {
		@media (max-width: 960px) { @content; }
	}
	@else if $point == medium {
		@media (max-width: 768px)  { @content; }
	}
	@else if $point == small {
		@media (max-width: 520px)  { @content; }
	}
}

// ===================================
// Rem Font Sizing (@include font-size(16);)
// ===================================

@mixin font-size($sizeValue: 1.6, $line: $sizeValue * 1.5){
  	font-size: ($sizeValue * 1) + px;
  	line-height: ($line * 1) + px;
  	font-size: ($sizeValue / 10) + rem;
  	line-height: ($line / 10) + rem;
}

// ===================================
// Transition (@include transition(all, 0.3s, linear);)
// ===================================

@mixin transition($transition-property, $transition-time, $method) {
	-webkit-transition: $transition-property $transition-time $method;
	-moz-transition: $transition-property $transition-time $method;
	-ms-transition: $transition-property $transition-time $method;
	-o-transition: $transition-property $transition-time $method;
	transition: $transition-property $transition-time $method;
}

@mixin no-transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}

// ===================================
// Border Radius (@include border-radius(5px); @include border-top-radius(10px);)
// ===================================
 
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box; 
}

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}

// ===================================
// Box Shadow (@include box-shadow(inset 0, 1px, 1px, rgba(0, 0, 0, 0.075));)
// ===================================

@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
	-webkit-box-shadow:$top $left $blur $color #{$inset};
	-moz-box-shadow:$top $left $blur $color #{$inset};
	box-shadow:$top $left $blur $color #{$inset};
}

// ===================================
// Clearfix (@include clearfix;)
// ===================================

@mixin clearfix {
	&:before, &:after { content: ""; display: table; }
	&:after { clear: both; }
	*zoom: 1;
}

// ===================================
// Opacity (@include opacity(8);)
// ===================================

@mixin opacity($trans) {
  	filter: alpha(opactiy=($trans * 100));
  	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$trans * 100})";
  	-moz-opacity: $trans;
  	-khtml-opacity: $trans;
  	opacity: $trans;
}

// ===================================
// Box Sizing (@include box-sizing(border-box);)
// ===================================

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model;
     -moz-box-sizing: $box-model;
          box-sizing: $box-model;
}